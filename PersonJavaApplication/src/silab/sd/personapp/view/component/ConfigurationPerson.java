/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package silab.sd.personapp.view.component;

import java.awt.BorderLayout;
import java.awt.Container;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JPanel;
import silab.sd.personapp.view.form.MainFrm;

/**
 *
 * @author HP
 */
public class ConfigurationPerson extends javax.swing.JPanel {

    /**
     * Creates new form ConfigurationPerson
     */
    public ConfigurationPerson() {
        initComponents();
        prepareComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        configFirstname = new silab.sd.personapp.view.component.InputComboPanel();
        configLastname = new silab.sd.personapp.view.component.InputComboPanel();
        configGender = new silab.sd.personapp.view.component.InputComboPanel();
        configDate = new silab.sd.personapp.view.component.InputComboPanel();
        configMarried = new silab.sd.personapp.view.component.InputComboPanel();
        btnOpen = new javax.swing.JButton();

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(configLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(configGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(configDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(configMarried, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(82, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(configFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(btnOpen)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(configFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(configLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(configGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(configDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(configMarried, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(btnOpen)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        try {
            ConfiguredPersonAdd personAdd = new ConfiguredPersonAdd();
            personAdd.addInputFields((String)configFirstname.getValue(), (String)configLastname.getValue(), (String)configGender.getValue(), (String)configDate.getValue(), (String)configMarried.getValue());
            Container bodyPanel = this.getParent();
            bodyPanel.removeAll();
            bodyPanel.setLayout(new BorderLayout());
            bodyPanel.add((JComponent)personAdd, BorderLayout.CENTER);
            personAdd.setVisible(true);
            bodyPanel.revalidate();
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_btnOpenActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOpen;
    private silab.sd.personapp.view.component.InputComboPanel configDate;
    private silab.sd.personapp.view.component.InputComboPanel configFirstname;
    private silab.sd.personapp.view.component.InputComboPanel configGender;
    private silab.sd.personapp.view.component.InputComboPanel configLastname;
    private silab.sd.personapp.view.component.InputComboPanel configMarried;
    // End of variables declaration//GEN-END:variables

    private void prepareComponents() {
        configFirstname.getLblText().setText("Firstname:");
        configFirstname.getLblErrorValue().setText("");
        List<String> firstnameOptions = new ArrayList<String>(){
            {
                add("Text");
            }
        };
        configFirstname.getCbValue().setModel(new DefaultComboBoxModel<>(firstnameOptions.toArray()));
        
        configLastname.getLblText().setText("Lastname:");
        configLastname.getLblErrorValue().setText("");
        List<String> lastnameOptions = new ArrayList<String>(){
            {
                add("Text");
            }
        };
        configLastname.getCbValue().setModel(new DefaultComboBoxModel<>(lastnameOptions.toArray()));
         
        configGender.getLblText().setText("Gender:");
        configGender.getLblErrorValue().setText("");
        List<String> genderOptions = new ArrayList<String>(){
            {
                add("Text");
                add("Combo Box");
                add("Radio button");
            }
        };
        configGender.getCbValue().setModel(new DefaultComboBoxModel<>(genderOptions.toArray()));
        
        configDate.getLblText().setText("Date:");
        configDate.getLblErrorValue().setText("");
        List<String> dateOptions = new ArrayList<String>(){
            {
                add("Text");
                add("Separated values");
            }
        };
        configDate.getCbValue().setModel(new DefaultComboBoxModel<>(dateOptions.toArray()));
       
        configMarried.getLblText().setText("Married:");
        configMarried.getLblErrorValue().setText("");
        List<String> marriedOptions = new ArrayList<String>(){
            {
                add("Text");
                add("Combo Box");
                add("Radio button");
            }
        };
        configMarried.getCbValue().setModel(new DefaultComboBoxModel<>(marriedOptions.toArray()));
    }

}
