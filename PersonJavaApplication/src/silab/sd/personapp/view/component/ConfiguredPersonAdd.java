/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package silab.sd.personapp.view.component;

import java.awt.Dimension;
import java.awt.GridLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import silab.sd.personapp.domain.Gender;
import silab.sd.personapp.view.component.validator.impl.RequiredStringValidator;
import silab.sd.personapp.view.form.FrmPersonComponent;

/**
 *
 * @author HP
 */
public class ConfiguredPersonAdd extends javax.swing.JPanel {
  
    GetValue inputFirstname, inputLastname, inputGender, inputDate, inputMarried;
    JButton btnSave;
    
    /**
     * Creates new form ConfiguredPersonAdd
     */
    public ConfiguredPersonAdd() {
        initComponents();
        bodyPnl.setLayout(new GridLayout(6,1));
        
        btnSave = new JButton();
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brnSaveActionPerformed(evt);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPnl = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(426, 432));
        setRequestFocusEnabled(false);

        javax.swing.GroupLayout bodyPnlLayout = new javax.swing.GroupLayout(bodyPnl);
        bodyPnl.setLayout(bodyPnlLayout);
        bodyPnlLayout.setHorizontalGroup(
            bodyPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 387, Short.MAX_VALUE)
        );
        bodyPnlLayout.setVerticalGroup(
            bodyPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPnl;
    // End of variables declaration//GEN-END:variables

    public void addInputFields(String configFirstname, String configLastname, String configGender, String configDate, String configMarried){
        
        //dodaje unos imena
        if(configFirstname.equals("Text")){
            inputFirstname = new silab.sd.personapp.view.component.InputTextfieldPanel();
            ((InputTextfieldPanel)inputFirstname).setValidator(new RequiredStringValidator());
            ((InputTextfieldPanel)inputFirstname).getLblText().setText("Firstname:");
            ((InputTextfieldPanel)inputFirstname).getLblErrorValue().setText("");
            addInputComponent((InputTextfieldPanel)inputFirstname);
        } else {
            ;
        }
        
        //dodaje unos prezimena
        if(configLastname.equals("Text")){
            inputLastname = new silab.sd.personapp.view.component.InputTextfieldPanel();
            ((InputTextfieldPanel)inputLastname).setValidator(new RequiredStringValidator());
            ((InputTextfieldPanel)inputLastname).getLblText().setText("Lastname:");
            ((InputTextfieldPanel)inputLastname).getLblErrorValue().setText("");
            addInputComponent((InputTextfieldPanel)inputLastname);
        } else {
            ;
        }
        
        //dodaje unos pola
        if(configGender.equals("Combo Box")){
            inputGender = new silab.sd.personapp.view.component.InputComboPanel();
            ((InputComboPanel)inputGender).getLblText().setText("Gender:");
            ((InputComboPanel)inputGender).getLblErrorValue().setText("");
            ((InputComboPanel)inputGender).fillComboBox(Gender.MALE, Gender.FEMALE);
            addInputComponent((InputComboPanel)inputGender);
        } else if(configGender.equals("Radio button")){
            inputGender = new silab.sd.personapp.view.component.Pick1of2RB();
            ((Pick1of2RB)inputGender).getLblText().setText("Gender:");
            ((Pick1of2RB)inputGender).getLblError().setText("");
            ((Pick1of2RB)inputGender).setRButtonsText("Male", "Female");
            addInputComponent((Pick1of2RB)inputGender);
        } else {
            inputGender = new silab.sd.personapp.view.component.InputTextfieldPanel();
            ((InputTextfieldPanel)inputGender).getLblText().setText("Gender:");
            ((InputTextfieldPanel)inputGender).getLblErrorValue().setText("");
            addInputComponent((InputTextfieldPanel)inputGender);
        }
        
        //dodaje unos datume rodjenja
        if(configDate.equals("Separated values")){
            inputDate = new silab.sd.personapp.view.component.InputDateSepareteElements();
            ((InputDateSepareteElements)inputDate).getLblText().setText("Date:");
            ((InputDateSepareteElements)inputDate).getLblErrorValue().setText("");
            addInputComponent((InputDateSepareteElements)inputDate);
        } else {
            inputDate = new silab.sd.personapp.view.component.InputTextfieldPanel();
            ((InputTextfieldPanel)inputDate).getLblText().setText("Date:");
            ((InputTextfieldPanel)inputDate).getLblErrorValue().setText("");
            addInputComponent((InputTextfieldPanel)inputDate);
        }
        
        //dodaje unos bracnog statusa
        if(configMarried.equals("Combo Box")){
            inputMarried = new silab.sd.personapp.view.component.InputComboPanel();
            ((InputComboPanel)inputMarried).getLblText().setText("Married:");
            ((InputComboPanel)inputMarried).getLblErrorValue().setText("");
            ((InputComboPanel)inputMarried).fillComboBox(true, false);
            addInputComponent((InputComboPanel)inputMarried);
        } else if(configMarried.equals("Radio button")){
            inputMarried = new silab.sd.personapp.view.component.Pick1of2RB();
            ((Pick1of2RB)inputMarried).getLblText().setText("Married:");
            ((Pick1of2RB)inputMarried).getLblError().setText("");
            ((Pick1of2RB)inputMarried).setRButtonsText("true", "false");
            addInputComponent((Pick1of2RB)inputMarried);
        } else {
            inputMarried = new silab.sd.personapp.view.component.InputTextfieldPanel();
            ((InputTextfieldPanel)inputMarried).getLblText().setText("Married:");
            ((InputTextfieldPanel)inputMarried).getLblErrorValue().setText("");
            addInputComponent((InputTextfieldPanel)inputMarried);
        }
        
        JPanel btnPanel = new JPanel();
        addInputComponent(btnPanel);
        btnPanel.add(btnSave);
        
    }
    
    public void addInputComponent(javax.swing.JComponent comp){
       bodyPnl.add(comp);
       comp.setVisible(true);
       bodyPnl.repaint();
    }

    private void brnSaveActionPerformed(java.awt.event.ActionEvent evt) {                                        
       savePerson(inputFirstname, inputLastname, inputGender, inputDate, inputMarried);
    }      
    
    private void savePerson(GetValue inputFirstname, GetValue inputLastname, GetValue inputGender, GetValue inputDate, GetValue inputMarried){
         try{
            String firstname = inputFirstname.getValue().toString();
            
            JOptionPane.showMessageDialog(this, "Ime: " + firstname);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Validacija nije prosla.");
        }
        
         try{
            String lastname = inputLastname.getValue().toString();
            
            JOptionPane.showMessageDialog(this, "Prezime: " + lastname);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Validacija nije prosla.");
        }
        
        try {
            String gender = inputGender.getValue().toString();
            JOptionPane.showMessageDialog(this, "Pol: " + gender);
        } catch (Exception ex) {
            Logger.getLogger(FrmPersonComponent.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        try {
            Date birthDay = (Date) inputDate.getValue();
            JOptionPane.showMessageDialog(this, "Datum rodjenja: " + new SimpleDateFormat("dd.mm.yyyy.").format(birthDay));
        } catch (Exception ex) {
            Logger.getLogger(FrmPersonComponent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
}
